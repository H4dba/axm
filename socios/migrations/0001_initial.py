# Generated by Django 5.1.6 on 2025-09-30 00:06

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoAssinatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Plano')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('valor_mensal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Mensal (R$)')),
                ('valor_anual', models.DecimalField(blank=True, decimal_places=2, help_text='Deixe em branco se não houver desconto anual', max_digits=10, null=True, verbose_name='Valor Anual (R$)')),
                ('duracao_dias', models.IntegerField(default=30, help_text='Duração padrão da assinatura em dias', verbose_name='Duração em Dias')),
                ('cor', models.CharField(default='#3498db', help_text='Cor hexadecimal para identificação visual', max_length=7, verbose_name='Cor do Plano')),
                ('ativo', models.BooleanField(default=True, verbose_name='Plano Ativo')),
                ('acesso_torneios', models.BooleanField(default=True, verbose_name='Acesso a Torneios')),
                ('desconto_eventos', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Desconto em Eventos (%)')),
                ('aulas_incluidas', models.IntegerField(default=0, verbose_name='Aulas Incluídas por Mês')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Tipo de Assinatura',
                'verbose_name_plural': 'Tipos de Assinatura',
                'ordering': ['valor_mensal'],
            },
        ),
        migrations.CreateModel(
            name='Socio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_socio', models.CharField(help_text='Número único de identificação do sócio', max_length=20, unique=True, verbose_name='Número do Sócio')),
                ('nome_completo', models.CharField(max_length=200, verbose_name='Nome Completo')),
                ('nome_social', models.CharField(blank=True, help_text='Nome pelo qual prefere ser chamado', max_length=200, verbose_name='Nome Social')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve estar no formato XXX.XXX.XXX-XX ou apenas números', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$|^\\d{11}$')], verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, verbose_name='RG')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('NB', 'Não-binário'), ('O', 'Outro'), ('N', 'Prefiro não informar')], max_length=2, verbose_name='Gênero')),
                ('telefone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Telefone deve estar no formato (XX) XXXXX-XXXX', regex='^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$|^\\d{10,11}$')], verbose_name='Telefone')),
                ('celular', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Telefone deve estar no formato (XX) XXXXX-XXXX', regex='^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$|^\\d{10,11}$')], verbose_name='Celular')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('cep', models.CharField(max_length=10, verbose_name='CEP')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('numero', models.CharField(max_length=10, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(max_length=2, verbose_name='Estado (UF)')),
                ('rating_fide', models.IntegerField(blank=True, null=True, verbose_name='Rating FIDE')),
                ('rating_cbx', models.IntegerField(blank=True, null=True, verbose_name='Rating CBX')),
                ('categoria_cbx', models.CharField(blank=True, max_length=50, verbose_name='Categoria CBX')),
                ('data_associacao', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Associação')),
                ('data_vencimento', models.DateField(verbose_name='Data de Vencimento')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inadimplente', 'Inadimplente'), ('suspenso', 'Suspenso'), ('inativo', 'Inativo')], default='ativo', max_length=15, verbose_name='Status')),
                ('profissao', models.CharField(blank=True, max_length=100, verbose_name='Profissão')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('foto', models.ImageField(blank=True, upload_to='socios/fotos/', verbose_name='Foto')),
                ('aceita_emails', models.BooleanField(default=True, verbose_name='Aceita E-mails Promocionais')),
                ('aceita_whatsapp', models.BooleanField(default=True, verbose_name='Aceita Mensagens no WhatsApp')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='socios_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('usuario', models.OneToOneField(blank=True, help_text='Usuário vinculado no sistema (opcional)', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário do Sistema')),
                ('tipo_assinatura', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='socios.tipoassinatura', verbose_name='Tipo de Assinatura')),
            ],
            options={
                'verbose_name': 'Sócio',
                'verbose_name_plural': 'Sócios',
                'ordering': ['numero_socio'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoPagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_pagamento', models.DateField(verbose_name='Data do Pagamento')),
                ('data_vencimento', models.DateField(verbose_name='Data de Vencimento')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Pago')),
                ('mes_referencia', models.DateField(help_text='Mês ao qual o pagamento se refere', verbose_name='Mês de Referência')),
                ('forma_pagamento', models.CharField(choices=[('dinheiro', 'Dinheiro'), ('cartao_debito', 'Cartão de Débito'), ('cartao_credito', 'Cartão de Crédito'), ('pix', 'PIX'), ('transferencia', 'Transferência Bancária'), ('boleto', 'Boleto'), ('outro', 'Outro')], max_length=20, verbose_name='Forma de Pagamento')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('confirmado', 'Confirmado'), ('cancelado', 'Cancelado'), ('estornado', 'Estornado')], default='confirmado', max_length=15, verbose_name='Status')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição/Observações')),
                ('comprovante', models.FileField(blank=True, upload_to='socios/comprovantes/', verbose_name='Comprovante')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Registrado por')),
                ('socio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagamentos', to='socios.socio', verbose_name='Sócio')),
            ],
            options={
                'verbose_name': 'Histórico de Pagamento',
                'verbose_name_plural': 'Histórico de Pagamentos',
                'ordering': ['-data_pagamento'],
            },
        ),
        migrations.CreateModel(
            name='DocumentoSocio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('identidade', 'RG/Identidade'), ('cpf', 'CPF'), ('comprovante_residencia', 'Comprovante de Residência'), ('certidao_nascimento', 'Certidão de Nascimento'), ('foto_3x4', 'Foto 3x4'), ('atestado_medico', 'Atestado Médico'), ('outro', 'Outro')], max_length=30, verbose_name='Tipo de Documento')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Documento')),
                ('arquivo', models.FileField(upload_to='socios/documentos/', verbose_name='Arquivo')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data do Upload')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Enviado por')),
                ('socio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='socios.socio', verbose_name='Sócio')),
            ],
            options={
                'verbose_name': 'Documento do Sócio',
                'verbose_name_plural': 'Documentos dos Sócios',
                'ordering': ['-data_upload'],
            },
        ),
    ]
